{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/FormAddContact/FormAddContact.module.css","components/FormAddContact/initialState.js","components/FormAddContact/fields.js","components/FormAddContact/FormAddContact.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","initialState","name","number","fields","type","pattern","title","required","FormAddContact","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","onSubmit","props","reset","console","log","this","className","styles","form","content","formTitle","input","onChange","button","Component","ContactListItem","onDelete","contactListItem","contactButton","onClick","ContactList","index","list","newArray","map","item","id","contactList","Filter","filterLabel","filterInput","App","contacts","filter","addToContacts","contact","shortid","generate","find","toLowerCase","alert","prevState","handleDelete","idx","newContacts","splice","handleFilter","currentTarget","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","FILTER","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05612096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__bLEsX\",\"contactButton\":\"ContactListItem_contactButton__3xdsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__-MKEg\",\"filterInput\":\"Filter_filterInput__2P6fe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2gMFh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FormAddContact_title__3BjsU\",\"form\":\"FormAddContact_form__oOy2r\",\"formTitle\":\"FormAddContact_formTitle__45c5v\",\"input\":\"FormAddContact_input__1z-BO\",\"button\":\"FormAddContact_button__XYnK6\"};","export const initialState = {\r\n    name: \"\",\r\n    number: \"\"\r\n};","export const fields = {\r\n    inputName: {\r\n        type: \"text\",\r\n        name: \"name\",\r\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n        title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n        required: true\r\n    },\r\n\r\n    inputNumber: {\r\n        type: \"tel\",\r\n        name: \"number\",\r\n        title: \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n        required: true\r\n    },\r\n}","import { Component } from 'react';\r\nimport { initialState } from \"./initialState\";\r\nimport { fields } from './fields';\r\nimport styles from \"./FormAddContact.module.css\";\r\nclass FormAddContact extends Component {\r\n    state = {...initialState}\r\n    \r\n\r\n    handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { onSubmit } = this.props;\r\n        onSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: ''  });\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        const { handleChange, handleSubmit } = this;\r\n        const { name, number } = this.state;        \r\n        return (\r\n            <>\r\n                <h2 className={styles.title}>Phonebook</h2>\r\n                <form onSubmit={handleSubmit} className={styles.form} >\r\n                    <div className={styles.content}>\r\n                        <h2 className={styles.formTitle}>Name</h2>\r\n                        <input className={styles.input} onChange={handleChange} {...fields.inputName}\r\n                        value={name}/>\r\n                    </div>\r\n\r\n                    <div className={styles.content}>\r\n                        \r\n                        <h2 className={styles.formTitle}>Number</h2>\r\n                        <input className={styles.input} onChange={handleChange} {...fields.inputNumber}\r\n                            value={number}\r\n                        />\r\n                    </div>\r\n                    <button className={styles.button}>add contacts</button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormAddContact;","import React from 'react';\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({name, number, onDelete }) => (\r\n    <li className={styles.contactListItem} >\r\n        {name}: {number}\r\n        <button className={styles.contactButton} onClick={onDelete}>Delete</button>\r\n    </li>\r\n)\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ list, onDelete }, index) => {\r\n    const newArray = [...list].map(item => <ContactListItem onDelete={()=>onDelete(index)} key={item.id} {...item}/> )\r\n    return (\r\n        <ul className={styles.contactList}>\r\n            {newArray}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return <label className={styles.filterLabel }>\r\n        Filtered by name <input className={styles.filterInput } type=\"text\" value={value} onChange={onChange }/>\r\n    </label>\r\n};\r\n\r\nexport default Filter;","import {Component} from 'react';\nimport FormAddContact from './components/FormAddContact';\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport shortid from 'shortid'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  }\n  addToContacts = ({name, number}) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n    \n    const { contacts } = this.state;\n    const result = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\n\n    result ? alert(`${name} is already in contact`) : this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts]\n      }));\n  }\n\n  handleDelete = (idx) => {\n    this.setState(prevState => {\n      const newContacts = [...prevState.contacts];\n      newContacts.splice(idx, 1);\n      return {\n        contacts: newContacts\n      }\n    })\n  }\n    handleFilter = (e) => {\n      this.setState({filter: e.currentTarget.value})\n    }\n  \n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    this.setState({ contacts: parseContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n    }\n  }\n\n  render() {\n    const { handleDelete ,handleFilter } = this;\n    const { contacts, filter } = this.state\n\n    const FILTER = filter.toLowerCase()\n\n    const filteredContacts = contacts.filter(({ name, number }) => name.toLowerCase().includes(FILTER) || number.includes(FILTER))\n\n    return (\n      <>\n        <FormAddContact onSubmit={this.addToContacts} />\n        <Filter\n          value={filter}\n          onChange={handleFilter}\n        />\n        <ContactList\n          list={filteredContacts}\n          onDelete={handleDelete}\n        />\n    </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}